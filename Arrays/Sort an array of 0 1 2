//brute force - merge sort - t.c = O(N)

//better solution - maintain count0, count1, count2 of no. of 0, 1, 2 then set array positions acc to it.
for(int i = 0; i < n; i++)
{
  if(arr[i] == 0) count0++;
  else if(arr[i] == 1) count1++;
  else if(arr[i] == 2) count2++;
}

//optimal solution - Dutch National Flag Algorithm
class Solution
{
    public:
    void sort012(int arr[], int n)
    {
        // code here 
        int low = 0, mid = 0, high = n-1;
        while(mid <= high)
        {
            if(arr[mid] == 0)
            {
                swap(arr[low], arr[mid]);
                mid++;
                low++;
            }
            else if(arr[mid] == 1)
            {
                mid++;
            }
            else
            {
                swap(arr[mid], arr[high]);
                high--;
            }
        }
        
    }
    
};

//[1, 2, 3, 4, 5] => after rotation => [2, 3, 4, 5, 1]

Time Complexity = O(n)
Space Complexity = O(1) -> no extra space, in place
The extra that I'm using is O(1), but in order to solve this problem, I'm using the given array so O(n) is being used. 

int temp = arr[0];
for(int i = 0; i < n; i++)
{
    arr[i-1] = arr[i];
}
arr[n-1] = temp;
